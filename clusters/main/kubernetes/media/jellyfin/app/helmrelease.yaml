apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.truechartsoci.org
      chart: jellyfin
      version: 20.6.18
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  timeout: 20m
  values:
    portal:
      open:
        enabled: false
    global:
      stopAll: false
    credentials:
      s3:
        type: s3
        url: ${S3_ENDPOINT_URL}
        bucket: "${S3_BUCKET}-jellyfin"
        accessKey: "${S3_ACCESS_KEY}"
        secretKey: "${S3_SECRET_KEY}"
        encrKey: "${S3_ENCRYPTION_KEY}"
    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            allowCors: true
            enabled: true
          homepage:
            enabled: true
            group: "Media"
            widget:
              custom:
                key: "${HP_API_JELLYFIN}"
          certManager:
          enabled: true
          certificateIssuer: domain-0-le-prod
        hosts:
        - host: jelly.${DOMAIN_0}
          paths:
          - path: /
            pathType: Prefix
    service:
      main:
        enabled: true
        loadBalancerIP: "${JELLYFIN_IP}"
        ports:
          main:
            port: 8096
        type: LoadBalancer
    persistence:
      config:
        volsync:
        - name: volsync
          type: restic
          credentials: s3
          dest:
            enabled: false
          src:
            enabled: true
            trigger:
              schedule: 30 0 * * *
      transcode:
        enabled: true
        mountPath: "/config/transcodes"
        type: "pvc"
      media:
        enabled: true
        type: nfs
        path: /mnt/Ottvault/Media/VideoVault
        mountPath: /media/videovault
        server: ${NAS_IP}

    resources:
      limits:
        nvidia.com/gpu: 1
    workload:
      main:
        podSpec:
          runtimeClassName: "nvidia"
